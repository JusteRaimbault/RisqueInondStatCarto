coltitle = "white")
cols <- carto.pal(pal1 = "red.pal",n1 = 5)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(sdf),dfid = 'cp',#"zip",
var="conn",
col=cols,
nclass=6,
breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
layoutLayer(title = "Connaissance du risque",
sources = "Source : Questionnaires Etudiants, IAUIdF",
author = "",
scale = 0,
frame = TRUE,
col = "black",
coltitle = "white")
areas = gArea(inondation,byid = TRUE)
wareas = sapply(d$cp[inds],function(s){ sum(areas*exp(-gDistance(gCentroid(communes[communes$cp==s,]),inondation,byid = TRUE)/5000))})
nivconn = as.numeric(unlist(d[,12]))
risqinond = as.numeric(d$VoletC_C1)
g=ggplot(data.frame(area=wareas,conn=nivconn[inds]),aes(x=area,y=conn))
library(ggplot2)
g=ggplot(data.frame(area=wareas,conn=nivconn[inds]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
inds = d$cp%in%communes$cp
distances = sapply(d$cp[inds],function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
g=ggplot(data.frame(distance=distances,conn=nivconn[inds]),aes(x=distance,y=conn))
g+geom_point()+geom_smooth()
g=ggplot(data.frame(distance=distances,risk=risqinond[inds]),aes(x=distance,y=risk))
g+geom_point()+geom_smooth()
g=ggplot(data.frame(area=wareas,conn=risqinond[inds]),aes(x=area,y=risk))
g+geom_point()+geom_smooth()
g=ggplot(data.frame(area=wareas,risk=risqinond[inds]),aes(x=area,y=risk))
g+geom_point()+geom_smooth()
sdf = d%>% group_by(cp)%>%
summarise(count=n(),
risk=mean(as.numeric(VoletC_C1),na.rm=T),
conn = mean(as.numeric(VoletB_B1),na.rm=T),
goodconn = mean(as.numeric(VoletB_B1)[as.numeric(VoletB_B1)>1],na.rm=T)
)
sdf$goodconn
distancessdf = sapply(sdf$cp,function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
indssdf = sdf$cp%in%communes$cp
distancessdf = sapply(sdf$cp[indssdf],function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
plot(distancessdf,sdf$goodconn[indssdf])
g=ggplot(data.frame(distance=distancessdf,conn=sdf$goodconn[indssdf]),aes(x=distance,y=conn))
g+geom_point()+geom_smooth()
unique(communes$cp)
distances = sapply(communes$cp,function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
allareas = sapply(communes$cp,function(s){ sum(areas*exp(-gDistance(gCentroid(communes[communes$cp==s,]),inondation,byid = TRUE)/5000))})
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,area=allareas),dfid = 'cp',#"zip",
var="area",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
inds = d$cp%in%communes$cp
distances = sapply(d$cp[inds],function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
summary(distances)
nivconn=nivconn[inds]
means=c();sds=c();types=c();dbreaks=c()
for(dbreak in seq(from=700,to =2000,by=100)){
means=append(means,mean(nivconn[distances<dbreak]));sds=append(sds,sd(nivconn[distances<dbreak]));types=append(types,"prox");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[distances>dbreak]));sds=append(sds,sd(nivconn[distances>dbreak]));types=append(types,"far");dbreaks=append(dbreaks,dbreak)
}
g=ggplot(data.frame(conn=means,connsd=sds,type=types,dbreak=dbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_errorbar(aes(ymin=conn-connsd,ymax=conn+connsd))
means=c();sds=c();types=c();dbreaks=c()
for(dbreak in seq(from=700,to =4000,by=100)){
means=append(means,mean(nivconn[distances<dbreak]));sds=append(sds,sd(nivconn[distances<dbreak]));types=append(types,"prox");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[distances>dbreak]));sds=append(sds,sd(nivconn[distances>dbreak]));types=append(types,"far");dbreaks=append(dbreaks,dbreak)
}
g=ggplot(data.frame(conn=means,connsd=sds,type=types,dbreak=dbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_errorbar(aes(ymin=conn-connsd,ymax=conn+connsd))
length(which(distances>4000))
length(which(distances>6000))
length(which(distances>5000))
means=c();sds=c();types=c();dbreaks=c()
for(dbreak in seq(from=700,to =6000,by=100)){
means=append(means,mean(nivconn[distances<dbreak]));sds=append(sds,sd(nivconn[distances<dbreak]));types=append(types,"prox");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[distances>dbreak]));sds=append(sds,sd(nivconn[distances>dbreak]));types=append(types,"far");dbreaks=append(dbreaks,dbreak)
}
g=ggplot(data.frame(conn=means,connsd=sds,type=types,dbreak=dbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_errorbar(aes(ymin=conn-connsd,ymax=conn+connsd))
means=c();sds=c();types=c();dbreaks=c();alldbreaks=c();allconns=c();alltypes=c()
for(dbreak in seq(from=700,to =6000,by=100)){
means=append(means,mean(nivconn[distances<dbreak]));sds=append(sds,sd(nivconn[distances<dbreak]));types=append(types,"prox");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[distances>dbreak]));sds=append(sds,sd(nivconn[distances>dbreak]));types=append(types,"far");dbreaks=append(dbreaks,dbreak)
allconns=append(allconns,nivconn[distances<dbreak]);alltypes=append(alltypes,rep("prox",length(nivconn[distances<dbreak])));alldbreaks=append(alldbreaks,rep(dbreak,length(nivconn[distances<dbreak])));
allconns=append(allconns,nivconn[distances>dbreak]);alltypes=append(alltypes,rep("far",length(nivconn[distances<dbreak])));alldbreaks=append(alldbreaks,rep(dbreak,length(nivconn[distances<dbreak])));
}
g=ggplot(data.frame(conn=allconns,type=alltypes,dbreak=alldbreaks),aes(x=dbreak,y=conn,col=type,group=type))
means=c();sds=c();types=c();dbreaks=c();alldbreaks=c();allconns=c();alltypes=c()
for(dbreak in seq(from=700,to =6000,by=100)){
means=append(means,mean(nivconn[distances<dbreak]));sds=append(sds,sd(nivconn[distances<dbreak]));types=append(types,"prox");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[distances>dbreak]));sds=append(sds,sd(nivconn[distances>dbreak]));types=append(types,"far");dbreaks=append(dbreaks,dbreak)
allconns=append(allconns,nivconn[distances<dbreak]);alltypes=append(alltypes,rep("prox",length(nivconn[distances<dbreak])));alldbreaks=append(alldbreaks,rep(dbreak,length(nivconn[distances<dbreak])));
allconns=append(allconns,nivconn[distances>dbreak]);alltypes=append(alltypes,rep("far",length(nivconn[distances>dbreak])));alldbreaks=append(alldbreaks,rep(dbreak,length(nivconn[distances>dbreak])));
}
g=ggplot(data.frame(conn=allconns,type=alltypes,dbreak=alldbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_smooth()
g+geom_point()+geom_smooth()
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,area=allareas),dfid = 'cp',#"zip",
var="area",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "weighted area",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "distance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
distances = sapply(communes$cp,function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "distance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
length(wareas)
summary(wareas)
length(nivconn)
means=c();sds=c();types=c();dbreaks=c();
for(dbreak in seq(from=10000000,to =10000000,by=1000000)){
means=append(means,mean(nivconn[wareas<dbreak]));sds=append(sds,sd(nivconn[wareas<dbreak]));types=append(types,"small");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[wareas>dbreak]));sds=append(sds,sd(nivconn[wareas>dbreak]));types=append(types,"large");dbreaks=append(dbreaks,dbreak)
}
g=ggplot(data.frame(conn=means,connsd=sds,type=types,dbreak=dbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_errorbar(aes(ymin=conn-connsd,ymax=conn+connsd))
means=c();sds=c();types=c();dbreaks=c();
for(dbreak in seq(from=10000000,to =40000000,by=1000000)){
means=append(means,mean(nivconn[wareas<dbreak]));sds=append(sds,sd(nivconn[wareas<dbreak]));types=append(types,"small");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[wareas>dbreak]));sds=append(sds,sd(nivconn[wareas>dbreak]));types=append(types,"large");dbreaks=append(dbreaks,dbreak)
}
g=ggplot(data.frame(conn=means,connsd=sds,type=types,dbreak=dbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_errorbar(aes(ymin=conn-connsd,ymax=conn+connsd))
means=c();sds=c();types=c();dbreaks=c();
for(dbreak in seq(from=10000000,to =45000000,by=1000000)){
means=append(means,mean(nivconn[wareas<dbreak]));sds=append(sds,sd(nivconn[wareas<dbreak]));types=append(types,"small");dbreaks=append(dbreaks,dbreak)
means=append(means,mean(nivconn[wareas>dbreak]));sds=append(sds,sd(nivconn[wareas>dbreak]));types=append(types,"large");dbreaks=append(dbreaks,dbreak)
}
g=ggplot(data.frame(conn=means,connsd=sds,type=types,dbreak=dbreaks),aes(x=dbreak,y=conn,col=type,group=type))
g+geom_point()+geom_line()+geom_errorbar(aes(ymin=conn-connsd,ymax=conn+connsd))
g=ggplot(data.frame(area=wareas,conn=nivconn),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
g=ggplot(data.frame(area=wareas[nivconn>1],conn=nivconn[nivconn>1]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
g=ggplot(data.frame(area=wareas[nivconn>2],conn=nivconn[nivconn>2]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 2;wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 1;wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 3;wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 2;wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
wareamax=2.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamin=2.5e7;wareamax=3.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,area=allareas),dfid = 'cp',#"zip",
var="area",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "surface pondérée",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
hist(nivconn)
ggplot(data.frame(conn=nivconn),aes(x=conn))+geom_bar()
ggplot(data.frame(conn=nivconn),aes(x=conn))+geom_density()
ggplot(data.frame(conn=nivconn),aes(x=conn))+geom_bar()
mean(nivconn)
median(nivconn)
d$cp[inds]
help("read_excel")
dim(d)
length(inds)
library(xlsx)
install.packages("xlsx")
library(xlsx)
write.xlsx(data.frame(CP=d$cp[inds],connaissance=nivconn), file='data/StatCarto_TP1.xlsx', sheetName="Donnees",
col.names=TRUE, row.names=FALSE, append=FALSE, showNA=TRUE)
cols <- carto.pal(pal1 = "red.pal",n1 = 5)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(sdf),dfid = 'cp',#"zip",
var="conn",
col=cols,
nclass=6,
breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
layoutLayer(title = "Connaissance du risque",
sources = "Source : Questionnaires Etudiants, IAUIdF",
author = "",
scale = 0,
frame = TRUE,
col = "black",
coltitle = "white")
cols <- carto.pal(pal1 = "red.pal",n1 = 5)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(sdf),dfid = 'cp',#"zip",
var="conn",
col=cols,
nclass=6,
breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
layoutLayer(title = "Connaissance du risque",
sources = "Source : Questionnaires Etudiants, IAUIdF",
author = "",
scale = 0,
frame = TRUE,
col = "black",
coltitle = "white")
length(nivconn)
help(sd)
mean((nivconn-mean(nivconn))^2)
sd(nivconn)
sqrt(mean((nivconn-mean(nivconn))^2))
cols <- carto.pal(pal1 = "red.pal",n1 = 10)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(sdf),dfid = 'cp',#"zip",
var="conn",
col=cols,
nclass=11,
breaks = seq(from=0.5,to=5.5,by=0.5),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "connaissance",
legend.values.rnd = 0.5
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
layoutLayer(title = "Connaissance du risque",
sources = "Source : Questionnaires Etudiants, IAUIdF",
author = "",
scale = 0,
frame = TRUE,
col = "black",
coltitle = "white")
alldistances = gDistance(gCentroid(communes,byid = TRUE),inondation,byid = TRUE)
length(alldistances)
alldistances = gDistance(gCentroid(communes,byid = TRUE),inondation)
length(alldistances)
alldistances = sapply(communes,function(geom){gDistance(gCentroid(geom),inondation)})
alldistances = sapply(communes$INSEE_COMM,function(code){gDistance(gCentroid(communes[communes$INSEE_COMM==code,]),inondation)})
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "distance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
length(communes)
alldistances = c();
for(i in 1:length(communes)){alldistances=append(alldistances,gDistance(gCentroid(communes[i,]),inondation))
}
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "distance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,distance=distances),dfid = 'cp',#"zip",
var="distance",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "distance",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
allareas = c();
for(i in 1:length(communes)){allareas=append(allareas,sum(areas*exp(-gDistance(gCentroid(communes[i,]),inondation,byid = TRUE)/5000)))
}
cols <- carto.pal(pal1 = "red.pal",n1 = 20)
choroLayer(spdf = communes,spdfid = "cp",
df = data.frame(cp=communes$cp,area=allareas),dfid = 'cp',#"zip",
var="area",
col=cols,
nclass=20,
#breaks = seq(from=0.5,to=5.5,by=1.0),#quantile(data$NBMEN11,probs=seq(from=0,to=1,by=0.2),na.rm=TRUE),
add=FALSE,lwd = 0.01,
legend.pos = "topleft",
legend.title.txt = "surface pondérée",
legend.values.rnd = 1.0
)
plot(inondation,add=T,col='blue',lwd=0.2)
plot(communes,border = "grey20",add=TRUE, lwd=0.2)
distances = sapply(d$cp[inds],function(s){gDistance(gCentroid(communes[communes$cp==s,]),inondation)})
nivconnmin = 0;distmin=0;distmax=100000
g=ggplot(data.frame(area=distances[nivconn>nivconnmin&distances>distmin&distances<distmax],conn=nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 1;distmin=0;distmax=100000
g=ggplot(data.frame(area=distances[nivconn>nivconnmin&distances>distmin&distances<distmax],conn=nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 2;distmin=0;distmax=100000
g=ggplot(data.frame(area=distances[nivconn>nivconnmin&distances>distmin&distances<distmax],conn=nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
nivconnmin = 2;wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
distmin=3000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=2500
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=2000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=0;distmax=2000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=3000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=3000;distmax=100000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=0;distmax=3000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=2000;distmax=100000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=0;distmax=2000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
write.xlsx(data.frame(CP=d$cp[inds],distance=distances,classe=ifelse(distances<2000,"proche","lointain"),connaissance=nivconn), file='data/StatCarto_TP1.xlsx', sheetName="Distance",
col.names=TRUE, row.names=FALSE, append=TRUE, showNA=TRUE)
cps=d$cp[inds]
write.xlsx(data.frame(CP=cps,connaissance=nivconn), file='data/StatCarto_TP1.xlsx', sheetName="Donnees",
col.names=TRUE, row.names=FALSE, append=FALSE, showNA=TRUE)
write.xlsx(data.frame(CP=cps,connaissance=nivconn), file='data/StatCarto_TP1.xlsx', sheetName="Donnees",
col.names=TRUE, row.names=FALSE, append=FALSE, showNA=TRUE)
distmax=2000
write.xlsx(data.frame(CP=cps[nivconn>nivconnmin],distance=distances[nivconn>nivconnmin],classe=ifelse(distances[nivconn>nivconnmin]<distmax,"proche","lointain"),connaissance=nivconn[nivconn>nivconnmin]), file='data/StatCarto_TP1.xlsx', sheetName="Distance",
col.names=TRUE, row.names=FALSE, append=TRUE, showNA=TRUE)
distmin=0;distmax=2000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=-1;distmax=2000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
distmin=2000;distmax=100000
mean(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
sd(nivconn[nivconn>nivconnmin&distances>distmin&distances<distmax])
wareamax=2.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamin=2.5e7;wareamax=3.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamax=2.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamin=2.5e7;wareamax=3.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
nivconnmin = 2;wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
wareamin=2.5e7;wareamax=3.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamax=2.5e7;wareamin=1e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
nivconnmin = 2;wareamin=0;wareamax=20e7#wareamin=1e7;wareamax=3.5e7
g=ggplot(data.frame(area=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],conn=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]),aes(x=area,y=conn))
g+geom_point()+geom_smooth()
wareamax=2.5e7;wareamin=0
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamin=2.5e7;wareamax=5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamax=3.5e7;wareamin=1e7;wareamed=2.5e7
write.xlsx(data.frame(
CP=cps[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],
access=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],
classe=ifelse(distances[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]<wareamed,"basse","haute"),
connaissance=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],
), file='data/StatCarto_TP1.xlsx', sheetName="Accessibilite",
col.names=TRUE, row.names=FALSE, append=TRUE, showNA=TRUE)
wareas
cps[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]
wareamax=3.5e7;wareamin=1e7;wareamed=2.5e7
write.xlsx(data.frame(
CP=cps[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],
access=wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax],
classe=ifelse(wareas[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]<wareamed,"basse","haute"),
connaissance=nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax]
), file='data/StatCarto_TP1.xlsx', sheetName="Accessibilite",
col.names=TRUE, row.names=FALSE, append=TRUE, showNA=TRUE)
wareamax=2.5e7;wareamin=1e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamin=2.5e7;wareamax=5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
wareamin=2.5e7;wareamax=3.5e7
mean(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
sd(nivconn[nivconn>nivconnmin&wareas>wareamin&wareas<wareamax])
